% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/replace.R
\name{replace}
\alias{nest_expr}
\alias{replace}
\title{replace call object
Replacement}
\usage{
replace(before, after)

nest_expr(expr, target, count)
}
\arguments{
\item{before}{a language object or literal}

\item{after}{a language object or literal}

\item{expr}{a language object}

\item{target}{a langage object that you want to replace}

\item{count}{count of iteration}
}
\description{
replace call object
Replacement
}
\examples{
walk_ast(quote(x + y + z), replace(quote(y), quote(www)))
walk_ast(quote(x + x + x), replace(quote(x + x), quote(x)))

# because `y + x + x` is parsed as `((y + x) + x)`,
# the next code manipulates nothing
walk_ast(quote(y + x + x), replace(quote(x + x), quote(x)))

walk_ast(quote(1 + 2 + x ^ 3), replace(quote(x), quote(y)))
walk_ast(quote(1 + 2 + x ^ 3), replace(quote(x^3), quote(y)))
walk_ast(quote(1 + 2 + x ^ 3), replace(quote(2), quote(99)))
walk_ast(quote(1 + 2 + x ^ 3), replace(quote(1+2), quote(99)))
walk_ast(quote(1 + 2 + x ^ 3), replace(quote(`+`), quote(`-`)))

nest_expr(quote((1 + x)^2), quote(x), 3)
nest_expr(quote((1 + x)^2), quote(1 + x), 3)
eval(nest_expr(quote(1 + 1 / x), quote(x), 40), list(x = 1)) == (1 + sqrt(5)) / 2
}

